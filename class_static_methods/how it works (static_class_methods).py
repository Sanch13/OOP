class Test:
    x = 1   # атрибуты класса
    y = 2   # атрибуты класса

    def __init__(self):
        self.x = 3  # атрибуты экзэмпляра класса (по умолчанию)
        self.y = 4  # атрибуты экзэмпляра класса (по умолчанию)

    @staticmethod
    def static_method(x, y):
        a = x + y   # вычисления происходят с указанными параметрами (аргументами)
        # b = self.x + self.y  # <-- ОШИБКА не понимает, что такое self. не может найти атрибуты экземпляра класса
        # c = cls.x + cls.y  # <-- ОШИБКА не понимает, что такое cls. не может найти атрибуты класса
        d = Test.x + Test.y # вычисления происходят с атрибутами класса
        print(a, d)

    @classmethod
    def class_method(cls, x, y):
        a = x + y   # вычисления происходят с указанными параметрами (аргументами)
        # b = self.x + self.y  # <-- ОШИБКА не понимает, что такое self. не может найти атрибуты экземпляра класса
        c = cls.x + cls.y   # вычисления происходят с атрибутами класса
        d = Test.x + Test.y  # вычисления происходят с атрибутами класса
        print(a, c, d)

    def self_method(self, x, y):
        a = x + y   # вычисления происходят с указанными параметрами (аргументами)
        b = self.x + self.y # вычисления происходят с атрибутами экзэмпляра класса (по умолчанию)
        # c = cls.x + cls.y  # <-- ОШИБКА не понимает, что такое cls. не может найти атрибуты класса
        d = Test.x + Test.y # вычисления происходят с атрибутами класса
        print(a, b, d)

    # def func_method(x, y):  # <-- ОШИБКА пихает в х ссылку на объект, ошибка при вызове
    #     a = x + y  # <-- ОШИБКА ^
    #     b = self.x + self.y  # <-- ОШИБКА ^
    #     c = cls.x + cls.y  # <-- ОШИБКА ^
    #     d = Test.x + Test.y
    #     return a, b, c, d

    # def empty_method():  # <-- ОШИБКА не знает куда бы запихнуть ссылку на объект
    #     return 123


t = Test()
t.static_method(5, 6)